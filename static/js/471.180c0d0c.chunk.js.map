{"version":3,"file":"static/js/471.180c0d0c.chunk.js","mappings":"yRAGA,MAAMA,EAAmBC,8FACnBC,EAAoBD,+FAC1B,IAAIE,EAAWC,QAETC,MAAML,GACPM,KAAKC,GAAYA,EAASC,QAC1BF,KAAKG,GAAQN,EAAaM,SAEzBJ,MAAMH,GACPI,KAAKC,GAAYA,EAASC,QAC1BF,KAAKG,GAAQL,EAASK,GAEpB,MAAMC,EAAmBA,KAG5BC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,UAAQC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAMF,SAAC,kBAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKF,UAClBF,EAAAA,EAAAA,MAAA,UAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeF,UAC5BF,EAAAA,EAAAA,MAAA,SAAOI,UAAU,oDAAmDF,SAAA,EAClEC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,cAAaF,UAC5BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBAGRC,EAAAA,EAAAA,KAAA,SAAAD,SACIV,EAAWa,IAAIb,IACbQ,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKV,EAAWc,OAAOC,UACvBJ,EAAAA,EAAAA,KAAA,MAAAD,SAAKM,EAAAA,EAAeC,OAAOjB,EAAWc,OAAOI,aAC7CP,EAAAA,EAAAA,KAAA,MAAAD,SAAKM,EAAAA,EAAeC,OAAOjB,EAAWc,OAAOK,WAC7CR,EAAAA,EAAAA,KAAA,MAAAD,SAAKM,EAAAA,EAAeC,OAAOjB,EAAWc,OAAOM,UAC7CT,EAAAA,EAAAA,KAAA,MAAAD,SAAKW,EAAAA,EAAcJ,OAAOjB,EAAWc,OAAOQ,WALrCtB,EAAWc,OAAOC,iBAWrCJ,EAAAA,EAAAA,KAAA,UACAH,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAMF,SAAC,iBACrBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeF,UAC5BF,EAAAA,EAAAA,MAAA,SAAOI,UAAU,oDAAmDF,SAAA,EAClEC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,cAAaF,UAC5BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIY,MAAM,MAAKb,SAAC,WAChBC,EAAAA,EAAAA,KAAA,MAAIY,MAAM,MAAKb,SAAC,oBAChBC,EAAAA,EAAAA,KAAA,MAAIY,MAAM,MAAKb,SAAC,eAChBC,EAAAA,EAAAA,KAAA,MAAIY,MAAM,MAAKb,SAAC,oBAGpBC,EAAAA,EAAAA,KAAA,SAAAD,SACIT,EAAOY,IAAIW,IACThB,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKc,EAAMV,OAAOC,UAClBJ,EAAAA,EAAAA,KAAA,MAAAD,SAAKc,EAAMV,OAAOW,eAClBd,EAAAA,EAAAA,KAAA,MAAAD,SAAKW,EAAAA,EAAcJ,OAAOO,EAAMV,OAAOY,cACvCf,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4BAA2BF,SAAEc,EAAMV,OAAOa,cAJjDH,EAAMV,OAAOC,2BAiB5C,I","sources":["components/views/inventario/InventarioScreen.js"],"sourcesContent":["import { formatterPeso } from '../../../helpers/formatterPeso.js';\r\nimport { formatterMiles } from '../../../helpers/formatterMiles.js';\r\n\r\nconst urlApiInventario = process.env.REACT_APP_API_INVENTARIO;\r\nconst urlApiProveedores = process.env.REACT_APP_API_PROVEEDORES;\r\nlet inventario,frutas;\r\n\r\nawait fetch(urlApiInventario)                       //Leer API tabla INVENTARIO objeto JSON Base de datos\r\n    .then(response => response.json())\r\n    .then(data => inventario = data)\r\n\r\nawait fetch(urlApiProveedores)                          //Leer API tabla FACTURA objeto JSON Base de datos\r\n    .then(response => response.json())\r\n    .then(data => frutas = data)\r\n\r\nexport const InventarioScreen = () => {\r\n\r\n  return (\r\n    <>\r\n      <center><h5 className='my-4'>Inventario</h5></center> \r\n      <div className='row'> \r\n        <center>\r\n          <div className='overflow-auto'>\r\n            <table className='table table-sm table-bordered table-striped w-100'>\r\n              <thead className=\"thead-light\">\r\n                <tr>\r\n                  <th>Fruta</th>\r\n                  <th>Disponibilidad</th>\r\n                  <th>Ventas</th>\r\n                  <th>Kilos</th>\r\n                  <th>Total</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                { inventario.map(inventario => (\r\n                    <tr key={inventario.detail.nombre}>\r\n                      <td>{inventario.detail.nombre}</td>\r\n                      <td>{formatterMiles.format(inventario.detail.cantidad)}</td>\r\n                      <td>{formatterMiles.format(inventario.detail.ventas)}</td>\r\n                      <td>{formatterMiles.format(inventario.detail.kilos)}</td>\r\n                      <td>{formatterPeso.format(inventario.detail.total)}</td>\r\n                    </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <hr />\r\n          <div >\r\n            <h5 className='my-4'>Proveedores</h5>\r\n            <div className='overflow-auto'>\r\n              <table className='table table-sm table-bordered table-striped w-100'>\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th scope=\"col\">Fruta</th>\r\n                    <th scope=\"col\">Descripci√≥n</th>\r\n                    <th scope=\"col\">Valor (K)</th>\r\n                    <th scope=\"col\">Proveedor</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  { frutas.map(fruta => (\r\n                      <tr key={fruta.detail.nombre}>\r\n                        <td>{fruta.detail.nombre}</td>\r\n                        <td>{fruta.detail.descripcion}</td>\r\n                        <td>{formatterPeso.format(fruta.detail.valorkilo)}</td>\r\n                        <td className='text-nowrap text-truncate'>{fruta.detail.proveedor}</td>\r\n                      </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </center>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default InventarioScreen;"],"names":["urlApiInventario","process","urlApiProveedores","inventario","frutas","fetch","then","response","json","data","InventarioScreen","_jsxs","_Fragment","children","_jsx","className","map","detail","nombre","formatterMiles","format","cantidad","ventas","kilos","formatterPeso","total","scope","fruta","descripcion","valorkilo","proveedor"],"sourceRoot":""}